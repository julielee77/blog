<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julie's Blog</title>
    <description>前端与产品，Web</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 11 Sep 2018 17:31:39 +0800</pubDate>
    <lastBuildDate>Tue, 11 Sep 2018 17:31:39 +0800</lastBuildDate>
    <generator>Jekyll v3.7.3</generator>
    
      <item>
        <title>Web Security Hole</title>
        <description>&lt;h1 id=&quot;web安全漏洞&quot;&gt;web安全漏洞&lt;/h1&gt;
&lt;h2 id=&quot;xxs攻击&quot;&gt;xxs攻击&lt;/h2&gt;
&lt;p&gt;http://www.myhack58.com/Article/60/61/2011/32542.htm
https://my.oschina.net/lovelong1/blog/217622&lt;/p&gt;
&lt;h2 id=&quot;ddos&quot;&gt;ddos&lt;/h2&gt;
&lt;h2 id=&quot;https&quot;&gt;https&lt;/h2&gt;
</description>
        <pubDate>Tue, 11 Sep 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/09/11/web-security-hole/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/09/11/web-security-hole/</guid>
        
        
      </item>
    
      <item>
        <title>Flex Layout</title>
        <description>&lt;p&gt;#flex布局
display:flex&lt;/p&gt;

&lt;p&gt;flex:1//number&lt;/p&gt;

&lt;p&gt;flex-direction:column//row –default&lt;/p&gt;

&lt;p&gt;flex-wrap:nowrap//default&lt;/p&gt;

&lt;p&gt;flex-row:&lt;/p&gt;

&lt;p&gt;align-items:center&lt;/p&gt;

&lt;p&gt;justify-content:center&lt;/p&gt;

&lt;p&gt;align-self&lt;/p&gt;

&lt;p&gt;align-content&lt;/p&gt;

&lt;p&gt;order&lt;/p&gt;

&lt;p&gt;兼容性处理
ios完全兼容
android 4.4+支持新版的flex布局，android 4.4－支持旧版flexbox布局。&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Jul 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/07/20/flex-layout/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/07/20/flex-layout/</guid>
        
        
      </item>
    
      <item>
        <title>Frontend Performance Optimization</title>
        <description>&lt;h1 id=&quot;前端性能优化&quot;&gt;前端性能优化&lt;/h1&gt;
&lt;p&gt;为了优化网页加载速度，以及便于扩展或维护等，通常需要优化前端代码或配置。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#优化总则&quot;&gt;优化总则&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#html优化&quot;&gt;html优化&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#css优化&quot;&gt;css优化&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#javascript优化&quot;&gt;javascript优化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;优化总则&quot;&gt;优化总则&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;###缓存
 缓存无疑是非常重要的，在一个项目中一般已做好各级的缓存（由客户端和后端），而对于前端来说需要关注浏览器缓存以及localStorage/sessionStorage能做到的一些事情（如缓存常用js文件／图片等）。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;推荐阅读：&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://www.alloyteam.com/2012/03/web-cache-1-web-cache-overview/&quot;&gt;AlloyTeam的web缓存机制系列&lt;/a&gt;的六篇文章（强烈推荐）&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://www.alloyteam.com/2016/03/discussion-on-web-caching/?utm_source=tuicool&amp;amp;utm_medium=referral&quot;&gt;浅谈Web缓存&lt;/a&gt; 比较系统地介绍缓存机制&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://www.360doc.com/content/16/0405/10/30136251_547971176.shtml&quot;&gt;浅谈浏览器http的缓存机制&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://web.jobbole.com/82838/&quot;&gt;关于Web静态资源缓存自动更新的思考与实践&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;###尽量减少HTTP请求的个数
    &lt;ul&gt;
      &lt;li&gt;CSS sprite 合并多个背景图到一个单独图像（单张不高于200k）&lt;/li&gt;
      &lt;li&gt;使用一些loader，合并js/css，并按需加载&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;###DRY和可维护性
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;压缩css和js文件&lt;/p&gt;

        &lt;p&gt;常用工具YUI Compressor, uglify-js,jsMin以及一些loader&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;img&lt;/strong&gt; 不要在文档中缩放图像&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;HTML&lt;/strong&gt; 非同源url或协议相同可省略，写作&lt;code class=&quot;highlighter-rouge&quot;&gt;//&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;css&lt;/strong&gt;
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;简写属性&lt;/p&gt;

            &lt;p&gt;此外，展开式属性并不能清空相关的其它属性。当然，在特定需求下，简写属性与展开式属性可合理配合。&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;可省略引号或用单引号&lt;/li&gt;
          &lt;li&gt;0px等省略单位&lt;/li&gt;
          &lt;li&gt;纯小数可省略0&lt;/li&gt;
          &lt;li&gt;十六进制颜色使用小写缩写形式 &lt;code class=&quot;highlighter-rouge&quot;&gt;#69f&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;js&lt;/strong&gt; 使用单引号&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Sublime Text编辑器配置SublimeLinter对js/css/html进行代码检测。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;html优化&quot;&gt;html优化&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;###明确声明文档类型，避免混杂模式（quirk mode）
&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;###&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;方便语音合成工具或翻译工具&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;###HTML属性顺序
 HTML属性应当按照以下顺序排列，确保代码的易读性&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;data-*&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;href&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;alt&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;aria-*&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;css优化&quot;&gt;css优化&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;慎重选择高消耗的样式expensive-styles&quot;&gt;慎重选择高消耗的样式(Expensive styles)&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;合理安排selector&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;高消耗属性（绘制前浏览器需要进行大量计算）
  &lt;code class=&quot;highlighter-rouge&quot;&gt;box-shadow&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;transparency&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt;&lt;/p&gt;

        &lt;p&gt;css filters（性能杀手）&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;避免过分重绘reflow&quot;&gt;避免过分重绘(reflow)&lt;/h3&gt;
    &lt;p&gt;例如，改变layout相关属性会触发重新布局，动画中应避免。如：
  &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;margin&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;padding&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt; , &lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;right&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;bottom&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;left&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;position&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;display&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;overflow&lt;/code&gt;等&lt;/p&gt;

    &lt;p&gt;不会触发重新布局的属性： &lt;code class=&quot;highlighter-rouge&quot;&gt;transform&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt;等&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;css-reset&quot;&gt;css reset&lt;/h3&gt;
    &lt;p&gt;&lt;strong&gt;reset.css&lt;/strong&gt; 重置全部效果，讲求浏览器的一致性&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;normalize.css&lt;/strong&gt; 注重通用方案，重置掉该重置的部分，保留有用的user Agent样式，同时修复一些bug&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;neat.css&lt;/strong&gt;  reset + normalize，此外还有以下特性&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;人性化的细节处理&lt;/li&gt;
      &lt;li&gt;考虑移动设备&lt;/li&gt;
      &lt;li&gt;考虑响应式&lt;/li&gt;
      &lt;li&gt;跨平台最佳font-family&lt;/li&gt;
      &lt;li&gt;解决表单渲染问题&lt;/li&gt;
      &lt;li&gt;面向未来&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;属性书写顺序&quot;&gt;属性书写顺序&lt;/h3&gt;
    &lt;p&gt;按照规范的css书写顺序(最初由Mozilla提出)，便于浏览器渲染，同时提高了代码的阅读体验。&lt;/p&gt;

    &lt;p&gt;Andy Ford是HTML和CSS方面的专家，最近写了一篇文章：&lt;a href=&quot;http://aloestudios.com/2009/02/order-of-the-day-css-properties/&quot;&gt;Order of the Day: CSS Properties&lt;/a&gt; . 文章推荐的CSS书写顺序为：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Display &amp;amp; Flow &lt;code class=&quot;highlighter-rouge&quot;&gt;display&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;float&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;clear&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Positioning &lt;code class=&quot;highlighter-rouge&quot;&gt;position&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;top/right/bottom/left&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Dimensions &lt;code class=&quot;highlighter-rouge&quot;&gt;z-index &lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Margins, Padding, Borders, Outline &lt;code class=&quot;highlighter-rouge&quot;&gt;box-sizing&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;margin/padding/border/outline&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Typographic Styles &lt;code class=&quot;highlighter-rouge&quot;&gt;font&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;text-*&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Backgrounds &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Opacity, Cursors, Generated Content &lt;code class=&quot;highlighter-rouge&quot;&gt;opacity&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;coursor&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt; ^^^&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Sublime Text编辑器可安装 &lt;a href=&quot;http://csscomb.com/docs&quot;&gt;CSSComb&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;兼容前缀：（1）标准的属性放在后面（2）IE无需写，它使用的是标准属&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;css-lint补充&quot;&gt;css lint（补充）&lt;/h3&gt;
    &lt;ul&gt;
      &lt;li&gt;加载性能  不要用import、压缩等，主要是减少文件体积、减少阻塞加载、提高并发方面&lt;/li&gt;
      &lt;li&gt;选择器性能 （非重点）&lt;/li&gt;
      &lt;li&gt;渲染性能 （重点）&lt;/li&gt;
      &lt;li&gt;可维护性、健壮性&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;推荐参考&lt;a href=&quot;http://cssguidelin.es&quot;&gt;CSS Guide&lt;/a&gt; By &lt;a href=&quot;http://csswizardry.com/work/&quot;&gt;Harry Roberts&lt;/a&gt;的规范。&lt;/p&gt;
&lt;h2 id=&quot;javascript优化&quot;&gt;javascript优化&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;DOM的多个读操作，应放在一起。两个读操作间，不要插入写操作&lt;/li&gt;
  &lt;li&gt;如果某个样式是通过重排得到的，那么最好缓存结果。&lt;/li&gt;
  &lt;li&gt;不要一条条地改变样式，而要通过改变class或csstext属性，一次性改变样式。&lt;/li&gt;
  &lt;li&gt;最好使用离线DOM，而不是真实的网面DOM来改变元素样式。 如docuementFragment对象&lt;/li&gt;
  &lt;li&gt;先将元素设为display:none，然后对这个节点进行n次DOM操作，最后回复显示。&lt;/li&gt;
  &lt;li&gt;position:absolute或fixed的元素，重排开销会较小&lt;/li&gt;
  &lt;li&gt;只在必要的时候，才将元素的display属性为可见&lt;/li&gt;
  &lt;li&gt;使用虚拟DOM的脚本库，比如React等。&lt;/li&gt;
  &lt;li&gt;使用window.requestAnimationFrame()、window.requestIdleCallback()调节重新渲染
requestAnimationFrame android 4.4.4以上支持  requestIdleCallback只有chrome支持&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;待续－－&lt;/p&gt;

</description>
        <pubDate>Fri, 09 Feb 2018 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2018/02/09/frontend-performance-optimization/</link>
        <guid isPermaLink="true">http://localhost:4000/2018/02/09/frontend-performance-optimization/</guid>
        
        
      </item>
    
      <item>
        <title>Mobile H5 Issue Summary</title>
        <description>&lt;h1 id=&quot;移动端h5问题总结&quot;&gt;移动端h5问题总结&lt;/h1&gt;
&lt;p&gt;以下问题提到的机型特指原系统自带的浏览器。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#fixed定位&quot;&gt;fixed定位&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#button类型input的disabled&quot;&gt;button类型input的disabled&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1px问题&quot;&gt;1px问题&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#border-radius&quot;&gt;border-radius&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#禁止滚动&quot;&gt;禁止滚动&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#background&quot;&gt;background&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;fixed定位&quot;&gt;fixed定位&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;ios4--android-21-不支持fixed&quot;&gt;ios4-, Android 2.1-不支持fixed&lt;/h3&gt;
    &lt;p&gt;position一律为static&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;当设置positionfixed若滚屏会出现错位&quot;&gt;当设置position:fixed，若滚屏会出现错位。&lt;/h3&gt;

    &lt;p&gt;解决办法：用absolute模拟fixed定位。&lt;a href=&quot;https://julielee77.github.io/demo/0001.html&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;HTML部分&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-	width,initial-scale=1,maximum-scale=1,user-	scalable=0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;absolute stimulates fixed&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;../css/demo/0001.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
     header fixed
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;main-wrapper&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;...超过一屏的文字&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&amp;gt;&lt;/span&gt;
     footer fixed
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;strong&gt;css部分（.styl）&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; header,footer
   position absolute
   left 0
   right 0
   background #43a08d
   line-height 44px
   z-index 1
   text-align center
   color #fff
   font-size 20px
 header
   top 0
 footer
   bottom 0
 .main-wrapper
   position absolute
   top 0
   bottom 0
   padding 44px 0
   overflow-y auto
   -webkit-overflow-scrolling touch //ios原生滚动回调效果
   p
     line-height 24px
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;目前，我们团队移动端Andriod为4.0＋，因此可不考虑此bug，但ios若将弹出框等设置为fixed，使其show时会出现页面未渲染出来但DOM文档中可找到（其实是存在的，只是页面看不到，比如弹出框的按钮还是可点击的）的情况，这种情况建议还是使用absolute。&lt;/p&gt;

&lt;h3 id=&quot;移动端fixed受transform影响&quot;&gt;移动端fixed受transform影响&lt;/h3&gt;
&lt;p&gt;//TODO&lt;/p&gt;

&lt;p&gt;此外，position:fixed还有其它一些坑，比如其中不能有input/textarea输入框，这样调出键盘后会会出现错位。而且，Android比ios表现更好。&lt;a href=&quot;https://github.com/maxzhang/maxzhang.github.com/issues/2&quot;&gt;更多fixed坑&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;button类型input的disabled&quot;&gt;button类型input的disabled&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input[type=button][disabled]
  opacity 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;重设ios渲染的默认opacity=0.4&lt;/p&gt;

&lt;h2 id=&quot;1px问题&quot;&gt;1px问题&lt;/h2&gt;

&lt;p&gt;原生1px等于物理1px，但web的1px则依 &lt;code class=&quot;highlighter-rouge&quot;&gt;devicePixelRatio&lt;/code&gt;而定。因此，在Retina屏中的1px往往是物理1px的数倍，参照一般 &lt;code class=&quot;highlighter-rouge&quot;&gt;devicePixelRatio=2&lt;/code&gt;可实现近似1px（当然也可以根据不同 &lt;code class=&quot;highlighter-rouge&quot;&gt;devicePixelRatio&lt;/code&gt;更精细地适配）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gray-4 = #e7e7e7 //间隔线
vendor(prop, args...)
  -webkit-{prop} args
  {prop} args
.scale
  position relative @unless @position
  &amp;amp;:after
    content ''
    position absolute
    bottom 0 @unless @bottom
    left 0 @unless @left
    right 0 @unless @right
    border-bottom 1px solid gray-4
    vendor transform scaleY(.5)
    vendor transform-origin 0 0  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在ios8中支持&lt;code class=&quot;highlighter-rouge&quot;&gt;border:0.5px&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;border-radius&quot;&gt;border-radius&lt;/h2&gt;

&lt;h3 id=&quot;android23不支持&quot;&gt;Android2.3不支持％&lt;/h3&gt;

&lt;p&gt;会将50%写成一个较大的值，如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;div
  border-radius 999px
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;android及safari低版本img圆角问题&quot;&gt;Android及safari低版本img圆角问题&lt;/h3&gt;

&lt;p&gt;当img有 &lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt;时设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;会导致圆角变形，需要在img外嵌套一层元素，并设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;border&lt;/code&gt;和 &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;android42x背景溢出&quot;&gt;Android4.2.x背景溢出&lt;/h3&gt;
&lt;p&gt;如Galary S4，红米，小米3。在Android4.2.x中同时设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;和 &lt;code class=&quot;highlighter-rouge&quot;&gt;background&lt;/code&gt;时，背景色会溢出到圆角以外，需要使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;background-clip:padding-box&lt;/code&gt;来修复，但是如果border-color为半透明时，北京直角部分依然会露出来。&lt;/p&gt;

&lt;h3 id=&quot;android42x不支持border-radius简写&quot;&gt;Android4.2.x不支持border-radius简写&lt;/h3&gt;

&lt;p&gt;如Galary S4，红米，小米3。解决方法：使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;四个扩展属性，缩写属性放在最后。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;border-radius(args)
  if(length(args)==1)
	border-top-left-radius args
	border-top-right-radius args
	border-bottom-right-radius args
	border-bottom-left-radius args
	border-radius args
  else
    border-radius args			
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;其它问题&quot;&gt;其它问题&lt;/h3&gt;

&lt;p&gt;IE9中fieldset不支持 &lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;IE9中带有背景渐变（ &lt;code class=&quot;highlighter-rouge&quot;&gt;gradient&lt;/code&gt;）的时候背景溢出。&lt;/p&gt;

&lt;p&gt;更多&lt;code class=&quot;highlighter-rouge&quot;&gt;border-radius&lt;/code&gt;问题参考 &lt;a href=&quot;https://github.com/yisibl/blog/issues/2&quot;&gt;border-radius 移动之伤&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;禁止滚动&quot;&gt;禁止滚动&lt;/h2&gt;
&lt;p&gt;移动端设置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;body{overflow-x:hidden;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;不会生效，因为移动端是基于touch，可将内容包裹再设置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.wrapper
  position fixed  
  overflow-x hidden
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;background&quot;&gt;background&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;background渐变背景&quot;&gt;background渐变背景&lt;/h3&gt;
    &lt;p&gt;部分Android对backgorund渐变不支持，而需要使用更明确的	background-image属性。&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; background-image: -webkit-linear-gradient(left, 	#f8f8f8 0%, #9edef9 50%, #f8f8f8 100%);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;此外，to right写法QQ浏览器／手机safari浏览器不支持。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;background-size简写兼容性&quot;&gt;background-size简写兼容性&lt;/h3&gt;
    &lt;p&gt;MX2不支持background-size简写&lt;/p&gt;

    &lt;p&gt;补充background简写&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; background: color image position/size repeat 	attachment clip origin;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;-webkit-backface-visibilitynone&quot;&gt;-webkit-backface-visibility:none;&lt;/h2&gt;
&lt;p&gt;可解决CSS3动画闪烁问题，但也会导致其它一些奇葩问题，慎用。&lt;/p&gt;
&lt;h2 id=&quot;transformtranslate3d&quot;&gt;transform:translate3d()&lt;/h2&gt;
&lt;p&gt;特别是Z轴的移位会导致一些问题，慎用。&lt;/p&gt;
&lt;h2 id=&quot;max-device-widthmax-width&quot;&gt;max-device-width/max-width&lt;/h2&gt;
&lt;p&gt;MX2不支持 &lt;code class=&quot;highlighter-rouge&quot;&gt;max-device-width&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;input与line-height&quot;&gt;input与line-height&lt;/h2&gt;
&lt;p&gt;注：input元素设置line-height控制高度时，mx2的光标高度等于line-height，可改为&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;input[type=tel]{
	height:44px;
	vertical-align:middle;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;ios不支持focus&quot;&gt;ios不支持focus()&lt;/h2&gt;
&lt;p&gt;ios中调用focus()方法，document.activeElement会改变为设置的元素，但并不会因此调出键盘。解决方法为&lt;strong&gt;在click方法中立即调用focus()， 不能有在timeout／异步请求等延时之后&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;详细示例参见&lt;a href=&quot;https://github.com/JulieLee77/frontend-articles/blob/master/hybrid%20app/mobile-h5-issue1-pay-password.md&quot;&gt;移动端h5问题探索(1)支付密码输入框&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;获取设备可用尺寸&quot;&gt;获取设备可用尺寸&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;screen.avialHeight&lt;/code&gt; 包含了webview渲染的标题栏，应使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;window.innerHeight&lt;/code&gt;获取文档显示区的高度。&lt;/p&gt;

</description>
        <pubDate>Wed, 26 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/26/mobile-h5-issue-summary/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/26/mobile-h5-issue-summary/</guid>
        
        
      </item>
    
      <item>
        <title>Tap Event</title>
        <description>&lt;h1 id=&quot;tap事件&quot;&gt;tap事件&lt;/h1&gt;
&lt;p&gt;由于移动端click事件有300ms的延迟，推荐用tap事件代替。&lt;/p&gt;

&lt;h2 id=&quot;定义&quot;&gt;定义&lt;/h2&gt;
&lt;p&gt;当touchstart/touchend发生时，如果手指为同一位置且没有touchmove时，即认为一个tap事件。&lt;/p&gt;
&lt;h2 id=&quot;tap穿透&quot;&gt;tap“穿透”&lt;/h2&gt;
&lt;p&gt;现象：当使用tap事件让一个蒙层消失时，会触发蒙层覆盖部分的click事件。&lt;/p&gt;

&lt;p&gt;解释：因为tap后蒙层消失，但300ms后click事件会被触发，就被覆盖部分的元素接受了。&lt;/p&gt;

&lt;p&gt;解决方法：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;使用缓动动画，过渡300ms的延迟&lt;/li&gt;
  &lt;li&gt;中间层DOM元素，让其接受此“穿透”&lt;/li&gt;
  &lt;li&gt;全部都是click事件（但避免不了a标签这种原生的click）&lt;/li&gt;
  &lt;li&gt;改用Fastclick的库（zepto.js已修复）&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sat, 22 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/22/tap-event/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/22/tap-event/</guid>
        
        
      </item>
    
      <item>
        <title>Mobile H5 Issue2 Swipe Tab</title>
        <description>&lt;h1 id=&quot;移动端h5问题探索2左右滑切换tab&quot;&gt;移动端h5问题探索(2)左右滑切换tab&lt;/h1&gt;
&lt;p&gt;移动端h5开发经常会用到滑动效果，但浏览器并没有提供swipe事件，可以用touch事件模拟。注意必须采用javascript的addEventListener绑定监听事件。&lt;/p&gt;

&lt;p&gt;参考&lt;a href=&quot;http://hedgehogking.com/?p=556&quot;&gt;HTML5的javascript touch事件&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;主要涉及知识点&quot;&gt;主要涉及知识点&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;移动端touch事件&lt;/li&gt;
  &lt;li&gt;阻止左右滑默认事件&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;touch事件&quot;&gt;touch事件&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;touchstart&quot;&gt;touchstart&lt;/h3&gt;
    &lt;p&gt;触摸开始&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;touchmove&quot;&gt;touchmove&lt;/h3&gt;
    &lt;p&gt;触摸拖动&lt;/p&gt;

    &lt;p&gt;可在此阻止页面滚动 &lt;code class=&quot;highlighter-rouge&quot;&gt;event.preventDefault();&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;touchend&quot;&gt;touchend&lt;/h3&gt;
    &lt;p&gt;触摸结束&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;touchcancel&quot;&gt;touchcancel&lt;/h3&gt;
    &lt;p&gt;触摸取消（官方无详细说明，作为不支持touchend时的替代方案）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;注：touchend部分手机不支持，如小米4，可用touchcanel代替（iphone SE不支持，但支持touchend）。&lt;/p&gt;
&lt;h2 id=&quot;每个touch事件都包含了3个touch对象列表&quot;&gt;每个touch事件都包含了3个touch对象列表&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;touches&quot;&gt;touches&lt;/h3&gt;
    &lt;p&gt;当前屏幕上所有触摸点的列表&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;targettouches&quot;&gt;targetTouches&lt;/h3&gt;
    &lt;p&gt;targetTouches当前对象上所有触摸点的列表&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;changedtouches&quot;&gt;changedTouches&lt;/h3&gt;
    &lt;p&gt;涉及当前事件的触摸点的列表&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;每个touch对象有如下属性&quot;&gt;每个touch对象有如下属性&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;target&lt;/p&gt;

    &lt;p&gt;触摸目标的DOM节点坐标&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;identifier&lt;/p&gt;

    &lt;p&gt;触摸的唯一ID，一般为从0开始的流水号&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;clientX/clientY&lt;/p&gt;

    &lt;p&gt;触摸目标在视口中的x/y坐标&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pageX/pageY&lt;/p&gt;

    &lt;p&gt;触摸目标在页面中的x/y坐标&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;screenX/screenY&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

 	触摸目标在屏幕中的x坐标

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;radiusX/radiusY/rotationAngle&lt;/p&gt;

    &lt;p&gt;手指触摸区域椭圆形的半径和旋转角度（低版本浏览器不支持）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;touch示例&quot;&gt;touch示例&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://julielee77.github.io/demo/0003.html&quot;&gt;demo&lt;/a&gt; 当触摸屏幕时，tip消失；触摸结束，tip显示。&lt;/p&gt;

&lt;h2 id=&quot;实现方法&quot;&gt;实现方法&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://julielee77.github.io/demo/0004.html&quot;&gt;实现demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;js关键部分&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//slide left &amp;amp; right, switch the tab
var xx, yy, XX, YY, swipeX, swipeY;
window.addEventListener('touchstart', function (event) {
  xx = event.targetTouches[0].screenX;
  yy = event.targetTouches[0].screenY;
  swipeX = true;
  swipeY = true;
}, false);
window.addEventListener('touchend', function (event) {
  XX = event.changedTouches[0].screenX;
  YY = event.changedTouches[0].screenY;
  if (swipeX &amp;amp;&amp;amp; Math.abs(XX - xx) - Math.abs(YY - yy) &amp;gt; 0) {//左右滑动
    event.stopPropagation();
    event.preventDefault();
    swipeY = false;
    if (XX &amp;gt; xx &amp;amp;&amp;amp; vm.tabIndex &amp;gt; 0) {
      vm.tabIndex--;
    } else if (XX &amp;lt; xx &amp;amp;&amp;amp; vm.tabIndex &amp;lt; vm.tabNames.length - 1) {
      vm.tabIndex++;
    }
  } else if (swipeY &amp;amp;&amp;amp; Math.abs(XX - xx) - Math.abs(YY - yy) &amp;lt; 0) {//上下滑动
    swipeX = false;
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sat, 22 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/22/mobile-h5-issue2-swipe-tab/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/22/mobile-h5-issue2-swipe-tab/</guid>
        
        
      </item>
    
      <item>
        <title>Mobile H5 Issue1 Pay Password</title>
        <description>&lt;h1 id=&quot;移动端h5问题探索1支付密码输入框&quot;&gt;移动端h5问题探索(1)支付密码输入框&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;主要涉及问题&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;input[type=tel]&lt;/code&gt;与&lt;code class=&quot;highlighter-rouge&quot;&gt;input[type=number]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-webkit-text-security&lt;/code&gt; mobile延迟&lt;/li&gt;
  &lt;li&gt;keydown事件阻止键入&lt;/li&gt;
  &lt;li&gt;ios &lt;code class=&quot;highlighter-rouge&quot;&gt;focus()&lt;/code&gt;方法问题&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;需求描述&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;点击页面的按钮时发出请求，根据请求结果决定是否显示支付密码输入弹框（聚焦输入框调出数字键盘）。&lt;/p&gt;

&lt;h2 id=&quot;思路解读&quot;&gt;思路解读&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;inputtypetel与inputtypenumber&quot;&gt;input[type=tel]与input[type=number]&lt;/h3&gt;
    &lt;p&gt;因为需要调出数字键盘，就排除了 &lt;code class=&quot;highlighter-rouge&quot;&gt;input[type=password]&lt;/code&gt;，而 &lt;code class=&quot;highlighter-rouge&quot;&gt;input[type=tel]&lt;/code&gt;或 &lt;code class=&quot;highlighter-rouge&quot;&gt;input[type=number]&lt;/code&gt;均可调出数字键盘，但 &lt;code class=&quot;highlighter-rouge&quot;&gt;input[type=number]&lt;/code&gt;可输入负数和小数点（且还有spin-button）。&lt;/p&gt;

    &lt;p&gt;考虑到 &lt;code class=&quot;highlighter-rouge&quot;&gt;-webkit-text-security&lt;/code&gt;在mobile的延迟，故需隐藏input，用元素显示圆点模拟（这样也方便调整样式）。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;HTML密码部分&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;input type=&quot;tel&quot; v-model=&quot;pwd&quot; class=&quot;pwdInput&quot; maxlength=&quot;6&quot; @keydown=&quot;pwdKeyDown($event)&quot; v-el:pwd v-if=&quot;lockPwd||!planed&quot;&amp;gt;
 &amp;lt;section class=&quot;mask pwd&quot; v-show=&quot;inputPwd&quot;&amp;gt;
   &amp;lt;div class=&quot;modal&quot;&amp;gt;
     &amp;lt;div class=&quot;modal-content&quot;&amp;gt;
       &amp;lt;h4&amp;gt;请输入6位数支付密码&amp;lt;/h4&amp;gt;
       &amp;lt;div class=&quot;pwd-box&quot;&amp;gt;
         &amp;lt;ul @click.prevent=&quot;focusPwd()&quot;&amp;gt;&amp;lt;li v-for=&quot;item in 6&quot; track-by=&quot;$index&quot;&amp;gt;&amp;lt;span v-if=&quot;pwd.length&amp;gt;$index&quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;
       &amp;lt;/div&amp;gt;
     &amp;lt;/div&amp;gt;
     &amp;lt;div class=&quot;footer clearfix&quot;&amp;gt;
       &amp;lt;div&amp;gt;&amp;lt;input type=&quot;button&quot; value=&quot;取消&quot; @click=&quot;inputPwd=false&quot;/&amp;gt;&amp;lt;/div&amp;gt;
       &amp;lt;div&amp;gt;&amp;lt;input type=&quot;button&quot; value=&quot;确定&quot; :disabled=&quot;pwd===null||pwd===undefined||pwd.length&amp;lt;pwdLength&quot; @click=&quot;submitPlan()&quot;/&amp;gt;&amp;lt;/div&amp;gt;
     &amp;lt;/div&amp;gt;
   &amp;lt;/div&amp;gt;
 &amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;&lt;strong&gt;css密码部分&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; //支付密码
 input.pwdInput[type=tel]
 position fixed
 top 50%
 left -100%
 padding 0
 border none
 color transparent
 background transparent
 &amp;amp;:focus
   outline none
	
 .pwd .modal
 .pwd-box
   width 100%
   margin 0 auto
   padding-top gap-12
   text-align center
   @extend .border-top-1px
   ul
     li
       box-sizing border-box
       display inline-block
       width 16.667%
       border-top 1px solid gray-4
       border-right 1px solid gray-4
       border-bottom 1px solid gray-4
       &amp;amp;:after
         content ''
         display inline-block
         vertical-align middle
         width 0
         height 100%
       span
         display inline-block
         vertical-align middle
         text-align center
         width 10px
         height 10px
         border-radius 999px
         background gray-8
       &amp;amp;:not(:first-child)
         border-left none
       &amp;amp;:first-child
         border-left 1px solid gray-4
         border-top-left-radius 2px
         border-bottom-left-radius 2px
       &amp;amp;:last-child
         border-top-right-radius 2px
         border-bottom-right-radius 2px	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;eventpreventdefault&quot;&gt;event.preventDefault();&lt;/h3&gt;
    &lt;p&gt;可在keydown方法中禁止键盘输入。移动端阻止默认事件支持 &lt;code class=&quot;highlighter-rouge&quot;&gt;event.preventDefault()&lt;/code&gt;和 &lt;code class=&quot;highlighter-rouge&quot;&gt;event.returnValue=false&lt;/code&gt;。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;密码输入keydown监听方法&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pwdKeyDown: function (event) {
   var flag = true;
   if (event.keyCode &amp;gt;= 48 &amp;amp;&amp;amp; event.keyCode &amp;lt;= 57) { //0-9
     (this.pwd !== null &amp;amp;&amp;amp; this.pwd !== undefined &amp;amp;&amp;amp; this.pwd.length == this.pwdLength) &amp;amp;&amp;amp; (flag = false); //密码已输完,禁止继续输入
   } else if (event.keyCode === 13) { //enter
     this.pwd !== null &amp;amp;&amp;amp; this.pwd !== undefined &amp;amp;&amp;amp; this.pwd.length === this.pwdLength &amp;amp;&amp;amp; this.submitPlan(); //若已输完6位,则enter提交
   } else if (event.keyCode !== 8 &amp;amp;&amp;amp; event.keyCode !== 46) { //非 delete &amp;amp; backspace
     flag = false;
   }
   !flag &amp;amp;&amp;amp; event.preventDefault();
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;关于documentactiveelementblur&quot;&gt;关于document.activeElement.blur();&lt;/h3&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;document.activeElement&lt;/code&gt;可获取当前聚焦元素。&lt;/p&gt;

    &lt;p&gt;本来是为了解决ios自动focus()问题（这应该是ios的bug）查找到的，但不支持focus()的环境先调用blur()()也并无作用。因此elemnt.blur()基本不用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;h3 id=&quot;ios自动focus实现&quot;&gt;ios自动focus()实现&lt;/h3&gt;
    &lt;p&gt;ios中调用focus()方法，document.activeElement会改变为设置的元素，但并不会因此调出键盘。解决方法为&lt;strong&gt;在click方法中立即调用focus()， 不能有在timeout／异步请求等延时之后&lt;/strong&gt;。因此input输入框应一直在DOM中，显示在页面视线外。&lt;/p&gt;

    &lt;p&gt;若需根据HTTP请求后的结果判断是否要focus()，故需改用同步请求。同时，不能在&lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;方法后focus()，原理同异步请求。&lt;/p&gt;

    &lt;p&gt;同时，input设置autofocus对ios也是无效的。&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;判断显示输入密码弹出框函数&lt;/strong&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; showInputPwd: function () {
       if (this.lastCode === 2013) {
         this.lockPwd = true;
         return;
       }
       var _this = this;
       $.ajax({
           url: 'js/0002.json',
           method: 'GET',
           async: false//solve ios focus() bug
         })
         .done(function (data) {
           if (data.code === 2013) {//支付密码已锁定
             _this.lockPwd = true;
             _this.lastCode = data.code;
           } else if (data.code === 0) {
             _this.inputPwd = true;
             _this.$set('pwd', null);
             setTimeout(function () {
               if (!_this.list) {
                 _this.list = document.querySelectorAll('.pwd-box li');
                 var width = document.querySelector('.pwd-box').clientWidth / 6;
                 for (var i = 0, v; v = _this.list[i]; i++) {
                   v.style.height = width + 'px';
                 }
               }
             }, 100);
            _this.$els.pwd.focus();
           }
         })
         .fail(function (error) {
           console.log('fail' + ',' + error);
         });
     }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;实现方法&quot;&gt;实现方法&lt;/h1&gt;

&lt;p&gt;使用了vue和jquery（主要用它的同步请求方法，若不需要改用vue-resource插件）&lt;a href=&quot;https://julielee77.github.io/demo/0002.html&quot;&gt;demo&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 20 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/20/mobile-h5-issue1-pay-password/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/20/mobile-h5-issue1-pay-password/</guid>
        
        
      </item>
    
      <item>
        <title>Vue Issue</title>
        <description>&lt;h1 id=&quot;vue实践总结&quot;&gt;Vue实践总结&lt;/h1&gt;
&lt;h2 id=&quot;vue问题总结&quot;&gt;Vue问题总结&lt;/h2&gt;
&lt;h3 id=&quot;click延迟&quot;&gt;click延迟&lt;/h3&gt;
&lt;p&gt;页面初次加载立即触发click事件会无响应，需滑动页面再触发。&lt;/p&gt;

&lt;p&gt;猜测是DOM还未渲染好或事件还未绑定。&lt;/p&gt;

&lt;p&gt;//TODO 待解决&lt;/p&gt;
&lt;h2 id=&quot;v-for渲染对象顺序&quot;&gt;v-for渲染对象顺序&lt;/h2&gt;
&lt;p&gt;ios和android顺序不一样，应避免使用。(vue 2.0已改为v-repeat)&lt;/p&gt;

&lt;p&gt;此方法类似&lt;code class=&quot;highlighter-rouge&quot;&gt;for attr in object&lt;/code&gt;再判断&lt;code class=&quot;highlighter-rouge&quot;&gt;hasOwnproperty&lt;/code&gt;，故遍历结果顺序不确定。&lt;/p&gt;
&lt;h2 id=&quot;插件&quot;&gt;插件&lt;/h2&gt;
&lt;h3 id=&quot;vue-resource&quot;&gt;vue-resource&lt;/h3&gt;
&lt;p&gt;实现ajax功能，并配置请求信息&lt;/p&gt;
&lt;h3 id=&quot;vue-touch&quot;&gt;vue-touch&lt;/h3&gt;
&lt;p&gt;移动端手指事件组件库&lt;/p&gt;

&lt;p&gt;该组件库使用hammer.js封装，但目前不支持vue 2.0。（2016.11.22）&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/18/vue-issue/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/18/vue-issue/</guid>
        
        
      </item>
    
      <item>
        <title>Mobile H5 Responsive Issue</title>
        <description>&lt;h1 id=&quot;移动端h5适配问题&quot;&gt;移动端h5适配问题&lt;/h1&gt;
&lt;p&gt;参考文章&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/amfe/article/issues/17&quot;&gt;使用Flexible实现手淘H5页面的终端适配&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://div.io/topic/1092?utm_source=tuicool&amp;amp;utm_medium=referral&quot;&gt;移动端高清、多屏适配方案&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;补充一些用于&lt;strong&gt;css media query&lt;/strong&gt;概念：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;dpr（device-pixel-ratio，设备像素比）&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;&lt;em&gt;dpr=物理像素/设备独立像素&lt;/em&gt;&lt;/p&gt;

    &lt;p&gt;因为retina高清屏幕的出现，才有了dpr的概念。比如，css像素为&lt;em&gt;1px × 1px&lt;/em&gt;的块，在&lt;em&gt;dpr=2&lt;/em&gt;的屏幕中物理像素为&lt;em&gt;2px × 2px&lt;/em&gt;的块。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;max-device-width与max-width&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;max-device-width指设备屏幕的宽度，max-width指浏览器的宽度。两者有区别的情形：（1）在浏览器中打开h5页面（2）当设备横屏时&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;以下将讨论h5页面适配中的几种尺寸的一般方案，具体元素的适配可能需要根据效果具体调整。&lt;/p&gt;

&lt;p&gt;首先，加载一段求出dpr，并添加为html的 &lt;code class=&quot;highlighter-rouge&quot;&gt;data-dpr&lt;/code&gt;属性&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//放在head里，需要在其它资源之前加载
    document.documentElement.setAttribute('data-dpr',window.devicePixelRatio|1);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;这样，之后就可以用html[data-dpr=*]写一些css hack了。&lt;/p&gt;
&lt;h1 id=&quot;图片&quot;&gt;图片&lt;/h1&gt;
&lt;p&gt;应该适应使用高清多倍图片，最好不同的dpr适应不同的图片文件。
假设以&lt;em&gt;750X1334&lt;/em&gt;（iphone 6，&lt;em&gt;dpr=2&lt;/em&gt;）做设计基准，有一个&lt;em&gt;400X600&lt;/em&gt;的图，那么css只需写&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;img{
  width:200px;
  height:300px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;而在不同设备中加载不同图片，就显示相应尺寸的图片。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考做法&lt;/strong&gt;：先切最大倍的图，然后用图片处理器等比缩放并命名，最后得到&lt;em&gt;3X&lt;/em&gt; /&lt;em&gt;2X&lt;/em&gt; /&lt;em&gt;1X&lt;/em&gt;的图。
（这里建议命名方式以 &lt;em&gt;imageName_1X.png&lt;/em&gt;这种方式）&lt;/p&gt;
&lt;h1 id=&quot;字体间隙&quot;&gt;字体/间隙&lt;/h1&gt;
&lt;p&gt;为了在大屏下显示更多的内容，字体和有些间隙不适合用rem适配，可以写成固定或设定几个适配的px值。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;参考做法&lt;/strong&gt;：写一个.mixin函数，然后设置css media query的时候调用。形如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.px2px(font-size, 32);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;以下为参考的less的.mixin函数（可能需要适当修改）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.px2px(@name, @px){
    @{name}: round(@px / 2) * 1px;
    [data-dpr=&quot;2&quot;] &amp;amp; {
        @{name}: @px * 1px;
    }
    // for mx3
    [data-dpr=&quot;2.5&quot;] &amp;amp; {
        @{name}: round(@px * 2.5 / 2) * 1px;
    }
    // for 小米note
    [data-dpr=&quot;2.75&quot;] &amp;amp; {
        @{name}: round(@px * 2.75 / 2) * 1px;
    }
    [data-dpr=&quot;3&quot;] &amp;amp; {
        @{name}: round(@px / 2 * 3) * 1px
    }
    // for 三星note4
    [data-dpr=&quot;4&quot;] &amp;amp; {
        @{name}: @px * 2px;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;其它控件&quot;&gt;其它控件&lt;/h1&gt;
&lt;p&gt;推荐用%、vw、vh或rem（font-size of the root element）单位。设置html的font-size（基准值），不同元素就可以根据设置的rem值自适应了。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;元素的尺寸=px/基准值&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;基准值=clientWidth×dpr/10&lt;/em&gt;  （推荐用此算法）&lt;/p&gt;

&lt;p&gt;比如，设计基准是iphone 6。&lt;em&gt;基准值=375×2/10=75px&lt;/em&gt;，加入一个元素在设计图中是100px，那么尺寸为&lt;em&gt;100/75=1.3333rem&lt;/em&gt;。&lt;/p&gt;

&lt;p&gt;这时候，就产生了两种设置基准值用于适配的思路：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;用js给每个设备设置基准值&lt;/p&gt;

    &lt;p&gt;用js获取&lt;em&gt;clientWidth&lt;/em&gt;并求出基准值后，给html元素加&lt;em&gt;style:font-size=基准值&lt;/em&gt;。（可与设置data-dpr属性同时）&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;用css media query写一些适配&lt;/p&gt;

    &lt;p&gt;例如：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; @media screen and (max-device-width: 320px){
       html[data-dpr=&quot;1&quot;]{
         font-size:32px;
       }
       html[data-depr=&quot;2&quot;]{
         font-size:64px;
       }
     }
     @media screen and (max-device-width: 360px){
       html[data-dpr=&quot;1&quot;]{
         font-size:36px;
       }
       html[data-depr=&quot;2&quot;]{
         font-size:72px;
       }
       html[data-dpr=&quot;3&quot;]{
         font-size:108px;
       }
     }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 06 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/06/mobile-h5-responsive-issue/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/06/mobile-h5-responsive-issue/</guid>
        
        
      </item>
    
      <item>
        <title>Weixin Share Issue</title>
        <description>&lt;h1 id=&quot;微信分享问题探索&quot;&gt;微信分享问题探索&lt;/h1&gt;
&lt;p&gt;2016年7月19日&lt;/p&gt;
&lt;h2 id=&quot;从应用分享到微信&quot;&gt;从应用分享到微信&lt;/h2&gt;
&lt;p&gt;由客户端封装分享的方法，提供给webview中的h5页面使用。&lt;/p&gt;

&lt;p&gt;可对分享到微信／微博等平台的图文分别控制。&lt;/p&gt;

&lt;p&gt;缩略图的要求为尺寸为90*90，可使用72的分辨率，但大小不能超过32k。同时客户端取消缩小。&lt;/p&gt;
&lt;h2 id=&quot;微信中分享&quot;&gt;微信中分享&lt;/h2&gt;
&lt;p&gt;参见&lt;a href=&quot;http://mp.weixin.qq.com/wiki/11/74ad127cc054f6b80759c40f77ec03db.html&quot;&gt;微信的JS-SDK文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;待续….&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Jun 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/06/26/weixin-share-issue/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/06/26/weixin-share-issue/</guid>
        
        
      </item>
    
  </channel>
</rss>
